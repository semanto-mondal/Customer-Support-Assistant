{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Submit your Information and Issue!! ",
        "formDescription": "This is a form to the customer can use to submit their personal information and any issues, or if they want to know information from any specific department.",
        "formFields": {
          "values": [
            {
              "fieldLabel": "What's Your Full Name?",
              "placeholder": "Elon Mask ",
              "requiredField": true
            },
            {
              "fieldLabel": "What's your email address?",
              "placeholder": "example@gmal.com",
              "requiredField": true
            },
            {
              "fieldLabel": "Phone Number (Optional)",
              "placeholder": "+8801155667788"
            },
            {
              "fieldLabel": "Please Mention Your Issue Subjet (In short)",
              "placeholder": "e,g: I am having internet browing issue or I want to know about available job posting ",
              "requiredField": true
            },
            {
              "fieldLabel": "Issue Category?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Technical"
                  },
                  {
                    "option": "Billing"
                  },
                  {
                    "option": "HR or Recruitment"
                  },
                  {
                    "option": "General"
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Issue Priority?",
              "fieldType": "dropdown",
              "fieldOptions": {
                "values": [
                  {
                    "option": "Low"
                  },
                  {
                    "option": "Medium"
                  },
                  {
                    "option": "High"
                  },
                  {
                    "option": "Urgent "
                  }
                ]
              },
              "requiredField": true
            },
            {
              "fieldLabel": "Please Give Some Detailed Description (If Available)",
              "placeholder": "Describe your problem or Requirement in simple english text"
            },
            {
              "fieldLabel": "Upload a Document (If Any)",
              "fieldType": "file"
            }
          ]
        },
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -1380,
        1780
      ],
      "id": "93285ea1-1129-4e1a-b73f-07db3ff33215",
      "name": "Form Submission",
      "webhookId": "4f835c5e-c78c-4fc9-81c4-ec6cb6af3c7b",
      "notes": "The user can submit an issue related to their service or for general information "
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -580,
        3120
      ],
      "id": "b7f7358d-07a4-4fd9-a0e9-6b76c23543b9",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "16nH3OpxXEGu1izcIUMoSaq75K1Zyyeoe",
          "mode": "list",
          "cachedResultName": "54786d74736dc26d77bbcec840f32c64 (1).docx",
          "cachedResultUrl": "https://docs.google.com/document/d/16nH3OpxXEGu1izcIUMoSaq75K1Zyyeoe/edit?usp=drivesdk&ouid=112100348026512893429&rtpof=true&sd=true"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -360,
        3120
      ],
      "id": "876f8bc9-c8c6-49bc-a9e2-5270b0c5c8b9",
      "name": "Google Drive"
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "value": "rag",
          "mode": "list",
          "cachedResultName": "rag"
        },
        "options": {
          "pineconeNamespace": "rag"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        -120,
        3120
      ],
      "id": "631393ec-73c0-4f78-91f5-7a623c9d15dc",
      "name": "Pinecone Vector Store"
    },
    {
      "parameters": {
        "modelName": "intfloat/multilingual-e5-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        -140,
        3340
      ],
      "id": "cfe7a9d8-d6e4-49fc-b75d-247998e70986",
      "name": "Embeddings HuggingFace Inference"
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1,
      "position": [
        0,
        3340
      ],
      "id": "7d6ffd0c-2a3a-4867-9df1-c7fb0976fa41",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "chunkOverlap": 200,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "typeVersion": 1,
      "position": [
        60,
        3540
      ],
      "id": "55c69421-acac-40ab-9328-0db989f2acf2",
      "name": "Recursive Character Text Splitter"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are a helpful assistant. You have one tool available, named Answer Question from the vector store. When a user asks a general question like Hi, how are you, then answer the question yourself without any tool. If the users ask something related to the company Amber it ltd then then use the tool and retrieve the information from the vector store and answer the user's question. "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -1160,
        3120
      ],
      "id": "80fde83a-5694-484a-9164-648ed68feade",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -1240,
        3340
      ],
      "id": "0ffb6027-b1e9-4669-91f4-4c0ea210f23d",
      "name": "Groq Chat Model"
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1080,
        3340
      ],
      "id": "f1e4c3c9-8fa5-47ae-97fb-8097b9f14c02",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "description": "Retrieve data from the vector store data to answer the user query",
        "topK": 5
      },
      "type": "@n8n/n8n-nodes-langchain.toolVectorStore",
      "typeVersion": 1.1,
      "position": [
        -960,
        3340
      ],
      "id": "b99665cc-794e-453e-946e-c68baf3fedaa",
      "name": "Answer questions with a vector store"
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "value": "rag",
          "mode": "list",
          "cachedResultName": "rag"
        },
        "options": {
          "pineconeNamespace": "rag"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "typeVersion": 1.1,
      "position": [
        -1060,
        3540
      ],
      "id": "8d62a5f8-825c-4687-ac2c-5656e8cd0aba",
      "name": "Pinecone Vector Store1"
    },
    {
      "parameters": {
        "modelName": "intfloat/multilingual-e5-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsHuggingFaceInference",
      "typeVersion": 1,
      "position": [
        -980,
        3720
      ],
      "id": "4d64b192-0313-47b0-b285-2121d56b3d22",
      "name": "Embeddings HuggingFace Inference1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -760,
        3540
      ],
      "id": "aa4cded1-f183-4022-969c-d2489cb8322e",
      "name": "Groq Chat Model1"
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1420,
        3120
      ],
      "id": "9c064f0c-2ff8-4054-90c1-335bf58e281f",
      "name": "When chat message received",
      "webhookId": "1a8f8fe2-523d-4138-9eee-04658c50e062"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1360,
        2500
      ],
      "id": "6538a3ed-78b3-468b-814a-d799caed2ebf",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.Status }}",
                    "rightValue": "Resolved",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "3f67c141-30f6-48d0-b73a-e27cc484904e"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Resolved"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "c8fdf04d-9b0b-47d5-9dd9-414cca12f46a",
                    "leftValue": "={{ $json.isDelayed }}",
                    "rightValue": {},
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Send Reminder"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -700,
        2420
      ],
      "id": "7e4c6650-f2c6-42c6-84f3-7d7e99a2fcf4",
      "name": "Switch1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM",
          "mode": "list",
          "cachedResultName": "Reported Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1140,
        2500
      ],
      "id": "f85e791f-0a3d-40bb-80e1-20ae69445e7d",
      "name": "Issue Database"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM",
          "mode": "list",
          "cachedResultName": "Reported Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "issue Id": "={{ $execution.id }}",
            "Name": "={{ $json['What\\'s Your Full Name?'] }}",
            "submission time": "={{ $json.submittedAt }}",
            "email": "={{ $json['What\\'s your email address?'] }}",
            "phone number": "={{ $json['Phone Number (Optional)'] }}",
            "issue titile": "={{ $json['Please Mention Your Issue Subjet (In short)'] }}",
            "issue category": "={{ $json['Issue Category?'] }}",
            "issue priority": "={{ $json['Issue Priority?'] }}",
            "detailed information": "={{ $json['Please Give Some Detailed Description (If Available)'] }}",
            "document upload ": "={{ $json['Upload a Document (If Any)'] }}",
            "Status": "Not Assigned"
          },
          "matchingColumns": [
            "issue Id"
          ],
          "schema": [
            {
              "id": "issue Id",
              "displayName": "issue Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "submission time",
              "displayName": "submission time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone number",
              "displayName": "phone number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue titile",
              "displayName": "issue titile",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue category",
              "displayName": "issue category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue priority",
              "displayName": "issue priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "detailed information",
              "displayName": "detailed information",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "document upload ",
              "displayName": "document upload ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -1160,
        1780
      ],
      "id": "df462ec5-6a39-4f62-bb9c-27c7a0cf9dc8",
      "name": "Issue Database1"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.email }}",
        "subject": "Your Issue Has Been Reported",
        "emailType": "text",
        "message": "=Dear {{ $json.Name }} ,    \n\nGreetings! Your issue has been successfully reported and forwarded to the {{ $json['issue category'] }} department. We will resolve it with {{ $json['issue priority'] }} priority and keep you updated.\n\nThank you for reaching out to us. If you have further questions, feel free to reply to this email.    \n\nBest regards,   \nSupport Team 24*7",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -940,
        1680
      ],
      "id": "dfab1441-e275-430e-918a-0810cad09842",
      "name": "ACK Mail to Customer",
      "webhookId": "40b1f629-8fc0-4c03-b923-c083c68f3cd6"
    },
    {
      "parameters": {
        "sendTo": "={{ \n $('Issue Database1').item.json['issue category']  === 'Technical' ? 'text@gmail.com' : \n$('Issue Database1').item.json['issue category'] === 'Billing' ? 'billing@example.com' : \n$('Issue Database1').item.json['issue category'] === 'HR or Recruitment' ? 'hr@example.com' : \n  'support@example.com' \n}}\n",
        "subject": "=Issue Reported  Issue ID: {{ $('Issue Database1').item.json['issue Id'] }}",
        "emailType": "text",
        "message": "=Please find the issue details below: \n\nName of the customer: {{ $json.Name }}\nSubmission time: {{ $json['submission time'] }}\nEmail of the customer: {{ $json.email\n}}\nPhone number of the customer: {{ $json['phone number'] }}\nIssue title: {{ $json['issue titile']}}\nIssue Priority: {{ $json['issue priority'] }}\nDetailed information: {{ $json['detailed information'] }}\nDocument Attached: {{ $json['document upload '] }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -720,
        1900
      ],
      "id": "0fa5e2ad-25fe-429c-8b2c-e1c9ba1cd50a",
      "name": "Assignment mail to each department",
      "webhookId": "042646a1-dab0-49bb-86e0-59193053a92a"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c09c91cc-38ff-45e9-84ac-580454341a90",
              "name": "Status",
              "value": "Assigned",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -500,
        1900
      ],
      "id": "8891d58e-46e4-44c5-9767-8cd662fdcd12",
      "name": "Updating Staus of the reported issue"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM",
          "mode": "list",
          "cachedResultName": "Reported Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Issues",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1zbQwFgKrYTlxoIL5QbbWaAQdlxVTEmQR1VYqnwAdYrM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "issue Id": "={{ $('Issue Database1').item.json['issue Id'] }}",
            "Status": "={{ $json.Status }}"
          },
          "matchingColumns": [
            "issue Id"
          ],
          "schema": [
            {
              "id": "issue Id",
              "displayName": "issue Id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "submission time",
              "displayName": "submission time",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "email",
              "displayName": "email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "phone number",
              "displayName": "phone number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue titile",
              "displayName": "issue titile",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue category",
              "displayName": "issue category",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "issue priority",
              "displayName": "issue priority",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "detailed information",
              "displayName": "detailed information",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "document upload ",
              "displayName": "document upload ",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Status",
              "displayName": "Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        -280,
        1900
      ],
      "id": "a51154fe-70de-4368-b23c-f2d301ef1ff9",
      "name": "Updated issue database"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\nconst currentTime = new Date($(\"Schedule Trigger\").all()[0]?.json?.timestamp);\n\nconst updatedItems = items.map((item) => {\n  const submissionTime = new Date(item?.json[\"submission time\"]);\n  const timeDifference = Math.floor(\n    (currentTime - submissionTime) / (1000 * 60 * 60),\n  );\n  const isDelayed = item?.json?.Status === \"Assigned\" && timeDifference >= 24;\n  return { ...item.json, isDelayed };\n});\n\nreturn updatedItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        2280
      ],
      "id": "d34457e5-5ce8-4a3c-967d-d2a012bbb20d",
      "name": "Compute Delay"
    },
    {
      "parameters": {
        "jsCode": "const issues = $input.all().map((item) => item.json);\n\nconst totalIssues = issues.length;\n\nconst issueCategories = issues.reduce((acc, issue) => {\n  const category = issue[\"issue category\"];\n  acc[category] = (acc[category] || 0) + 1;\n  return acc;\n}, {});\n\nconst issueStatuses = issues.reduce((acc, issue) => {\n  const status = issue[\"Status\"];\n  acc[status] = (acc[status] || 0) + 1;\n  return acc;\n}, {});\n\nreturn {\n  totalIssues,\n  issueCategories,\n  issueStatuses,\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -920,
        2620
      ],
      "id": "1e84ee9d-2b44-4227-bb6f-79ddae2d145b",
      "name": "generaye the Isssue database daily  report"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json['issue category'] }}",
                    "rightValue": "Technical",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    },
                    "id": "2ff66ae1-50b0-47ff-a619-d198c731fcb0"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Technical"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7998833e-d17a-4634-8d26-aeb5dd9fa7f2",
                    "leftValue": "={{ $json['issue category'] }}",
                    "rightValue": "Billing",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Billing"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "52d8d66d-ce40-41e7-8c12-a442adf73157",
                    "leftValue": "={{ $json['issue category'] }}",
                    "rightValue": "HR or Recruitment",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "HR"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0829b6d8-7cd1-4302-98a1-2eafd190f4d7",
                    "leftValue": "={{ $json['issue category'] }}",
                    "rightValue": "General",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "General"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -940,
        1880
      ],
      "id": "b32c79a2-5cdc-46be-83d9-545c8b98d057",
      "name": "Assignment Route to concern department"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Issue Database').item.json.email }}",
        "subject": "Your Issue Has Been Resolved ",
        "emailType": "text",
        "message": "=Dear  {{ $('Issue Database').item.json.Name }}, \n\nThe Reported issue with issue id {{ $('Issue Database').item.json['issue Id'] }} has been resolved. \n\nPlease let us know if you need any further assitance. \n\nThanks \nSupport Team 24*7",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -480,
        2220
      ],
      "id": "b686a4ae-479c-44c0-b1be-628ec9a1b56f",
      "name": "Resolve Notification to customer",
      "webhookId": "64ec22d5-4f95-4e8f-ab82-2a5faaa7d25e"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Issue Database').item.json.email }}",
        "subject": "Update to the Issue",
        "emailType": "text",
        "message": "=Dear  {{ $('Issue Database').item.json.Name }}, \n\nOur team is looking into your issue with issue id {{ $('Issue Database').item.json['issue Id'] }} and update you soon. \n\nThanks\nSupport Team 24*7",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -480,
        2420
      ],
      "id": "58a3ffae-ff11-4360-854a-e65d95aa94e4",
      "name": "Reminder Mail to Department",
      "webhookId": "859195c2-2dfd-49a8-8fb9-a4eb7aa5905d"
    },
    {
      "parameters": {
        "sendTo": "semanto420@gmail.com",
        "subject": "=The issue id {{ $('Issue Database').item.json['issue Id'] }} is still in Assigned Status",
        "emailType": "text",
        "message": "=Dear Team, \nThis is to remind you that the issue id  {{ $('Issue Database').item.json['issue Id'] }} is still in assigned status from last 24 hours. Please check and update the customer or concern team. \n\nThanks ",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -480,
        2620
      ],
      "id": "566d1544-d351-4546-849f-a2fb7816aff2",
      "name": "Follow up mail to customer",
      "webhookId": "5444a366-55a9-4505-b48e-4a231651c37c"
    },
    {
      "parameters": {
        "sendTo": "text@gmail.com",
        "subject": "=Daily Issue Report of  {{ $today }}",
        "emailType": "text",
        "message": "=Dear Team, \n\nPlease find the issue report summary of {{ $today }}\n\nTotal Reported Issue: {{ $json.totalIssues }}\n\nIssue in Each Department: \nTechnical: {{ $json.issueCategories.Technical }}\n\nIssue in Each Category:\nNot Assigned: {{ $json.issueStatuses['Not Assigned'] }}\nAssigned: {{ $json.issueStatuses.Resolved }}\nResolved: {{ $json.issueStatuses.Resolved }}\n\nThank you ",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -700,
        2620
      ],
      "id": "f8175313-1975-44a0-b275-4dcddaed3c11",
      "name": "Dailty Report ",
      "webhookId": "69a086fc-1790-4b4e-8316-817d77662460"
    }
  ],
  "pinData": {},
  "connections": {
    "Form Submission": {
      "main": [
        [
          {
            "node": "Issue Database1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings HuggingFace Inference": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Pinecone Vector Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Answer questions with a vector store": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Pinecone Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings HuggingFace Inference1": {
      "ai_embedding": [
        [
          {
            "node": "Pinecone Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Answer questions with a vector store",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Issue Database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Resolve Notification to customer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Reminder Mail to Department",
            "type": "main",
            "index": 0
          },
          {
            "node": "Follow up mail to customer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Issue Database": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Compute Delay",
            "type": "main",
            "index": 0
          },
          {
            "node": "generaye the Isssue database daily  report",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Issue Database1": {
      "main": [
        [
          {
            "node": "ACK Mail to Customer",
            "type": "main",
            "index": 0
          },
          {
            "node": "Assignment Route to concern department",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assignment mail to each department": {
      "main": [
        [
          {
            "node": "Updating Staus of the reported issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Updating Staus of the reported issue": {
      "main": [
        [
          {
            "node": "Updated issue database",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute Delay": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "generaye the Isssue database daily  report": {
      "main": [
        [
          {
            "node": "Dailty Report ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Assignment Route to concern department": {
      "main": [
        [
          {
            "node": "Assignment mail to each department",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Assignment mail to each department",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Assignment mail to each department",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Assignment mail to each department",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7c43476a-de6f-4714-9386-43876d21a0f0",
  "meta": {
    "instanceId": "f1500b01e653052bd124839d73d85ba75244027ea8ec137c8bcaf81096820e0d"
  },
  "id": "MJP546UhIzB8VSzT",
  "tags": []
}